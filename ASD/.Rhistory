Association_SuperiorLongitudinalFasciculusR = dmdtifp1_20,
Association_UncinateFasciculusL = dmdtifp1_12,
Association_UncinateFasciculusR = dmdtifp1_11) %>%
select(IID = src_subject_id, starts_with(c("Projection", "Comm", "Asso"))) %>%
inner_join(abcd.demo)
abcd.d.mri.fa2 <- abcd.d.mri.fa %>%
mutate_at(.vars = vars(starts_with(c("Projection", "Comm", "Asso"))),
.funs = function(x){
df <- abcd.d.mri.fa %>%
mutate(y = x) %>%
select(y, interview_age, sex)
z_from_lm(y = df$y, x = df[,-1])
})
rpoe.d.mri <- read_rds(paste0(ifelse(device == "IDAS", "~/LSS", "/Dedicated"),
"/jmichaelson-wdata/msmuhammad/projects/RPOE/dwi/data",
"/derivatives/recognized-tracts-summary-stats-DSI_RAW.rds"))
rpoe.d.mri.fa <- rpoe.d.mri %>%
filter(roi %in% colnames(abcd.d.mri.fa2),
feature %in% c("dti_fa")) %>%
mutate(new_name = paste0(feature, "__", roi)) %>%
pivot_wider(names_from = new_name, values_from = value, id_cols = c("te_id")) %>%
select(te_id, any_of(paste0(c("dti_fa__"), colnames(abcd.d.mri.fa2)))) %>%
left_join(rpoe.demo %>% select(te_id, MRI_age, sex)) %>%
drop_na(MRI_age)
fa.keep <- names(colSums(rpoe.d.mri.fa %>% select(starts_with("dti")))[!is.na(colSums(rpoe.d.mri.fa %>% select(starts_with("dti"))))])
rpoe.d.mri.fa2 <- rpoe.d.mri.fa %>%
select(te_id, MRI_age, sex, fa.keep)
rpoe.d.mri.fa3 <- rpoe.d.mri.fa2 %>%
mutate_at(.vars = fa.keep,
.funs = function(x) {
df <- rpoe.d.mri.fa2 %>%
mutate(y = x) %>%
select(y, MRI_age, sex)
z_from_lm(y = df$y, x = df[,-1])
})
abcd.d.mri.fa3 <- abcd.d.mri.fa2 %>%
filter(grepl("baseline", eventname)) %>%
rename_at(.vars = vars(starts_with(c("Projection", "Comm", "Asso"))),
.funs = function(x) paste0("dti_fa__", x)) %>%
select(IID, any_of(fa.keep))
#       MD
abcd.d.mri.md <- read_csv(paste0(ifelse(device == "IDAS", "~/LSS", "/Dedicated"),
"/jmichaelson-sdata/ABCD/abcd_release_5_0/core/imaging/mri_y_dti_md_fs_at.csv")) %>%
filter(grepl("baseline", eventname)) %>%
rename(ProjectionBasalGanglia_ThalamicRadiationL = dmdtifp1_52,
ProjectionBasalGanglia_ThalamicRadiationR = dmdtifp1_51,
Commissure_CorpusCallosum = dmdtifp1_61,
ProjectionBrainstem_CorticospinalTractL = dmdtifp1_50,
ProjectionBrainstem_CorticospinalTractR = dmdtifp1_49,
ProjectionBasalGanglia_FornixL = dmdtifp1_44,
ProjectionBasalGanglia_FornixR = dmdtifp1_43,
Association_InferiorFrontoOccipitalFasciculusL = dmdtifp1_58,
Association_InferiorFrontoOccipitalFasciculusR = dmdtifp1_57,
Association_InferiorLongitudinalFasciculusL = dmdtifp1_56,
Association_InferiorLongitudinalFasciculusR = dmdtifp1_55,
ProjectionBasalGanglia_CorticostriatalTractL = dmdtifp1_69,
ProjectionBasalGanglia_CorticostriatalTractR = dmdtifp1_68,
Association_SuperiorLongitudinalFasciculusL = dmdtifp1_63,
Association_SuperiorLongitudinalFasciculusR = dmdtifp1_62,
Association_UncinateFasciculusL = dmdtifp1_54,
Association_UncinateFasciculusR = dmdtifp1_53) %>%
select(IID = src_subject_id, starts_with(c("Projection", "Comm", "Asso"))) %>%
inner_join(abcd.demo)
abcd.d.mri.md2 <- abcd.d.mri.md %>%
mutate_at(.vars = vars(starts_with(c("Projection", "Comm", "Asso"))),
.funs = function(x){
df <- abcd.d.mri.md %>%
mutate(y = x) %>%
select(y, interview_age, sex)
z_from_lm(y = df$y, x = df[,-1])
})
rpoe.d.mri.md <- rpoe.d.mri %>%
filter(roi %in% colnames(abcd.d.mri.md2),
feature %in% c("md")) %>%
mutate(new_name = paste0(feature, "__", roi)) %>%
pivot_wider(names_from = new_name, values_from = value, id_cols = c("te_id")) %>%
select(te_id, any_of(paste0(c("md__"), colnames(abcd.d.mri.md2)))) %>%
left_join(rpoe.demo %>% select(te_id, MRI_age, sex)) %>%
drop_na(MRI_age)
md.keep <- names(colSums(rpoe.d.mri.md %>% select(starts_with("md")))[!is.na(colSums(rpoe.d.mri.md %>% select(starts_with("md"))))])
rpoe.d.mri.md2 <- rpoe.d.mri.md %>%
select(te_id, MRI_age, sex, md.keep)
rpoe.d.mri.md3 <- rpoe.d.mri.md2 %>%
mutate_at(.vars = md.keep,
.funs = function(x) {
df <- rpoe.d.mri.md2 %>%
mutate(y = x) %>%
select(y, MRI_age, sex)
z_from_lm(y = df$y, x = df[,-1])
})
abcd.d.mri.md3 <- abcd.d.mri.md2 %>%
filter(grepl("baseline", eventname)) %>%
rename_at(.vars = vars(starts_with(c("Projection", "Comm", "Asso"))),
.funs = function(x) paste0("md__", x)) %>%
select(IID, any_of(md.keep))
rm(abcd.d.mri.fa);rm(abcd.d.mri.fa2);rm(abcd.d.mri.md);rm(abcd.d.mri.md2);rm(rpoe.d.mri)
rm(rpoe.d.mri.fa2);rm(rpoe.d.mri.md2);rm(rpoe.d.mri.fa);rm(rpoe.d.mri.md)
#################
# mental health #
abcd.mh <- read_csv(paste0(ifelse(device == "IDAS", "~/LSS", "/Dedicated"),
"/jmichaelson-sdata/ABCD/abcd_release_5_0/core/mental-health/mh_p_cbcl.csv")) %>%
select(IID = src_subject_id,2, contains("syn"), contains("dsm5"))
abcd.mh2 <- abcd.mh[,c(T,T,grepl("_r$", colnames(abcd.mh)[-c(1:2)]))] %>%
filter(grepl("baseline", eventname)) %>% drop_na() %>%
inner_join(abcd.demo) %>%
rename_all(.funs = function(x) sub("cbcl_scr_", "", x))
abcd.mh3 <- abcd.mh2 %>%
mutate_at(.vars = vars(starts_with(c("syn", "dsm5"))),
.funs = function(x){
df <- abcd.mh2 %>%
mutate(y = x) %>%
select(y, interview_age, sex)
z_from_lm(y = df$y, x = df[,-1])
})
rpoe.mh <- read_csv(paste0(ifelse(device == "IDAS", "~/LSS", "/Dedicated"),
"/jmichaelson-wdata/msmuhammad/projects/RPOE/behavior/data/derivatives/all-behavior-data-age-sex-corrected.csv"))  %>%
select(devGenes_id,
syn_anxdep_r = syn_anxious,
syn_withdep_r = syn_withdrawn,
syn_somatic_r = syn_somatic,
syn_social_r = syn_social,
syn_thought_r = syn_thought,
syn_attention_r = syn_attention,
syn_rulebreak_r = syn_rulebreaking,
syn_aggressive_r = syn_aggressive,
dsm5_depress_r = dsm5_depressive,
dsm5_anxdisord_r = dsm5_anxiety,
dsm5_somaticpr_r = dsm5_somatic,
dsm5_adhd_r = dsm5_ADHD)
abcd.mh4 <- abcd.mh3 %>%
filter(grepl("baseline", eventname)) %>%
select(IID, any_of(colnames(rpoe.mh)))
rm(abcd.mh);rm(abcd.mh2);rm(abcd.mh3)
#######
# PGS #
abcd.pgs <- read_tsv(paste0(ifelse(device == "IDAS", "~/LSS", "/Dedicated"),
"/jmichaelson-wdata/trthomas/array/merged_2022_ABCD_iWES1_WGS_2-4/PGS/all_PGS.tsv")) %>%
filter(grepl("autism", PGS_name), IID %in% abcd.demo$IID) %>%
select(IID, ASD = PGS_std_PCresid)
abcd.all <- inner_join(abcd.cog2,
abcd.d.mri.fa3) %>%
inner_join(abcd.d.mri.md3) %>%
inner_join(abcd.s.mri3) %>%
inner_join(abcd.mh4) %>%
inner_join(abcd.pgs) %>%
select(-c(interview_age, sex, eventname))
rpoe.all <- inner_join(rpoe.cog,
rpoe.d.mri.fa3) %>%
inner_join(rpoe.d.mri.md3) %>%
inner_join(rpoe.s.mri2) %>%
inner_join(rpoe.mh %>% inner_join(rpoe.demo %>% select(te_id, devGenes_id))) %>%
inner_join(rpoe.demo %>% select(te_id, ASD_dx)) %>%
select(-c(devGenes_id, sex, MRI_age)) %>%
rename(IID = te_id, ASD = ASD_dx)
all(colnames(abcd.all) == colnames(rpoe.all))
################################################################################
################################################################################
################################################################################
# train and test on ABCD
model2 <- randomForest::randomForest(ASD ~ .,
data = abcd.all %>%
select(-IID))
model <- glm(ASD ~ ., data = abcd.all %>%
select(-IID))
k.predictions <- read_csv("data/derivatives/keras-predictions-rpoe.csv")
rf.predictions <- predict(model2,
rpoe.all %>% select(-c(IID, ASD)))
g.predictions <- predict(model2,
rpoe.all %>% select(-c(IID, ASD)))
g.predictions <- predict(model,
rpoe.all %>% select(-c(IID, ASD)))
rpoe.all %>%
mutate(DL_pred = k.predictions,
glm_pred = g.predictions,
RF_pred = rf.predictions) %>%
pivot_longer(cols = ends_with("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin() +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name)
rpoe.all %>%
mutate(DL_pred = k.predictions,
glm_pred = g.predictions,
RF_pred = rf.predictions)
rpoe.all %>%
mutate(DL_pred = k.predictions,
glm_pred = g.predictions,
RF_pred = rf.predictions) %>%
pivot_longer(cols = ends_with("_pred"))
k.predictions
rpoe.all %>%
mutate(DL_pred = k.predictions[,1],
glm_pred = g.predictions,
RF_pred = rf.predictions) %>%
pivot_longer(cols = ends_with("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin() +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name)
rpoe.all %>%
mutate(DL_pred = k.predictions %>% as.numeric(),
glm_pred = g.predictions,
RF_pred = rf.predictions) %>%
pivot_longer(cols = ends_with("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin() +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name)
k.predictions
k.predictions$V1
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred = g.predictions,
RF_pred = rf.predictions) %>%
pivot_longer(cols = ends_with("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin() +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name)
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred = g.predictions,
RF_pred = rf.predictions) %>%
pivot_longer(cols = ends_with("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin() +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name) +
theme_linedraw() +
theme(strip.background = element_rect(fill = "white", color = "white"),
strip.text = element_text(color = "black"),
legend.position = "bottom",
plot.caption = element_text(hjust = 0))
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred = g.predictions,
RF_pred = rf.predictions) %>%
pivot_longer(cols = ends_with("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin(show.legend = F) +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name) +
theme_linedraw() +
theme(strip.background = element_rect(fill = "white", color = "white"),
strip.text = element_text(color = "black"),
legend.position = "bottom",
plot.caption = element_text(hjust = 0))
tt <- theme_linedraw() +
theme(strip.background = element_rect(fill = "white", color = "white"),
strip.text = element_text(color = "black"),
legend.position = "bottom",
plot.caption = element_text(hjust = 0))
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred = g.predictions,
RF_pred = rf.predictions) %>%
pivot_longer(cols = ends_with("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin(show.legend = F) +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name) +
tt
source(paste0(ifelse(device == "IDAS", "~/LSS", "/Dedicated"),
"/jmichaelson-wdata/msmuhammad/msmuhammad-source.R"))
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred = g.predictions,
RF_pred = rf.predictions) %>%
pivot_longer(cols = ends_with("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin(show.legend = F) +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name) +
bw.theme
abide <- read_csv("/Dedicated/jmichaelson-sdata-new/public-data/ABIDE/data/raw/Phenotypic_V1_0b_preprocessed1.csv")
View(abide)
table(abide$qc_func_rater_2)
table(abide$DX_GROUP[which(abide$qc_func_rater_2 %in% c("OK"))])
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred = g.predictions,
RF_pred = rf.predictions) %>%
pivot_longer(cols = ends_with("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin(show.legend = F) +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name) +
bw.theme
ggsave("figs/models-predictions-on-RPOE.png", bg = "white",
width = 8, height = 5, units = "in", dpi = 360)
hist(abcd.all$ASD)
hist(abcd.all$ASD, 20)
hist(abcd.all$ASD, 50)
abcd.dx <- read_csv(paste0(ifelse(device == "IDAS", "~/LSS", "/Dedicated"),
"/jmichaelson-sdata/ABCD/abcd_release_5_0/core/general/abcd_p_screen.csv"))
abcd.dx <- read_csv(paste0(ifelse(device == "IDAS", "~/LSS", "/Dedicated"),
"/jmichaelson-sdata/ABCD/abcd_release_5_0/core/abcd-general/abcd_p_screen.csv"))
View(abcd.dx)
abcd.dx <- read_csv(paste0(ifelse(device == "IDAS", "~/LSS", "/Dedicated"),
"/jmichaelson-sdata/ABCD/abcd_release_5_0/core/abcd-general/abcd_p_screen.csv")) %>%
select(IID = src_subject_id, ASD_dx = scrn_asd)
abcd.pgs
abcd.pgs %>%
inner_join(abcd.dx)
abcd.pgs %>%
inner_join(abcd.dx) %>%
ggplot(aes(x=ASD, color = ASD_dx)) +
geom_density()
abcd.pgs %>%
inner_join(abcd.dx) %>%
mutate(ASD_dx = as.factor(ASD_dx)) %>%
ggplot(aes(x=ASD, color = ASD_dx)) +
geom_density()
abcd.pgs %>%
inner_join(abcd.dx) %>%
mutate(ASD_dx = as.factor(ASD_dx)) %>%
drop_na() %>%
ggplot(aes(x=ASD, color = ASD_dx)) +
geom_density()
abcd.all <- inner_join(abcd.cog2,
abcd.d.mri.fa3) %>%
inner_join(abcd.d.mri.md3) %>%
inner_join(abcd.s.mri3) %>%
inner_join(abcd.mh4) %>%
inner_join(abcd.pgs) %>%
inner_join(abcd.dx) %>%
select(-c(interview_age, sex, eventname))
model <- glm(ASD_dx ~ ., data = abcd.all %>%
select(-IID, -any_of("ASD")))
g.predictions <- predict(model,
rpoe.all %>% select(-c(IID, ASD)))
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred = g.predictions,
RF_pred = rf.predictions) %>%
pivot_longer(cols = ends_with("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin(show.legend = F) +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name) +
bw.theme
################################################################################
################################################################################
################################################################################
# train and test on ABCD
rf.model1 <- randomForest::randomForest(ASD ~ .,
data = abcd.all %>%
select(-IID, -ASD_dx))
abcd.all <- inner_join(abcd.cog2,
abcd.d.mri.fa3) %>%
inner_join(abcd.d.mri.md3) %>%
inner_join(abcd.s.mri3) %>%
inner_join(abcd.mh4) %>%
inner_join(abcd.pgs) %>%
inner_join(abcd.dx %>% mutate(ASD_dx = as.factor(ASD_dx))) %>%
select(-c(interview_age, sex, eventname))
glm.model1 <- glm(ASD ~ ., data = abcd.all %>%
select(-IID, -ASD_dx))
rf.model2 <- randomForest::randomForest(ASD_dx ~ .,
data = abcd.all %>%
select(-IID, -ASD))
table(abcd.all$ASD_dx)
abcd.all <- inner_join(abcd.cog2,
abcd.d.mri.fa3) %>%
inner_join(abcd.d.mri.md3) %>%
inner_join(abcd.s.mri3) %>%
inner_join(abcd.mh4) %>%
inner_join(abcd.pgs) %>%
inner_join(abcd.dx %>% mutate(ASD_dx = as.factor(ASD_dx))) %>%
select(-c(interview_age, sex, eventname)) %>%
drop_na(ASD_dx)
rf.model2 <- randomForest::randomForest(ASD_dx ~ .,
data = abcd.all %>%
select(-IID, -ASD))
glm.model2 <- glm(ASD_dx ~ ., data = abcd.all %>%
select(-IID, -ASD))
table(abcd.all$ASD_dx)
glm.model2 <- glm(ASD_dx ~ ., data = abcd.all %>%
select(-IID, -ASD))
glm.model2 <- glm(ASD_dx ~ ., data = abcd.all %>%
select(-IID, -ASD) %>%
mutate(ASD_dx = as.numeric(ASD_dx)))
rf.predictions1 <- predict(rf.model1,
rpoe.all %>% select(-c(IID, ASD)))
g.predictions1 <- predict(glm.model1,
rpoe.all %>% select(-c(IID, ASD)))
rf.predictions2 <- predict(rf.model2,
rpoe.all %>% select(-c(IID, ASD)))
g.predictions2 <- predict(glm.model2,
rpoe.all %>% select(-c(IID, ASD)))
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred1 = g.predictions1,
RF_pred1 = rf.predictions1,
glm_pred2 = g.predictions2,
RF_pred2 = rf.predictions2) %>%
pivot_longer(cols = ends_with("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin(show.legend = F) +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name) +
bw.theme
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred1 = g.predictions1,
RF_pred1 = rf.predictions1,
glm_pred2 = g.predictions2,
RF_pred2 = rf.predictions2) %>%
pivot_longer(cols = contains("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin(show.legend = F) +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name) +
bw.theme
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred1 = g.predictions1,
RF_pred1 = rf.predictions1,
glm_pred2 = g.predictions2,
RF_pred2 = rf.predictions2) %>%
pivot_longer(cols = contains("_pred"), values_transform = list(RF_pred2 = as.numeric())) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin(show.legend = F) +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name) +
bw.theme
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred1 = g.predictions1,
RF_pred1 = rf.predictions1,
glm_pred2 = g.predictions2,
RF_pred2 = rf.predictions2) %>%
pivot_longer(cols = contains("_pred"), values_transform = list(RF_pred2 = as.numeric)) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin(show.legend = F) +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name) +
bw.theme
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred1 = g.predictions1,
RF_pred1 = rf.predictions1,
glm_pred2 = g.predictions2,
RF_pred2 = rf.predictions2)
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred1 = g.predictions1,
RF_pred1 = rf.predictions1,
glm_pred2 = g.predictions2,
RF_pred2 = rf.predictions2) %>%
mutate_at(.vars = vars(contains("_pred")), .funs = function(x) as.numeric(x))
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred1 = g.predictions1,
RF_pred1 = rf.predictions1,
glm_pred2 = g.predictions2,
RF_pred2 = rf.predictions2) %>%
mutate_at(.vars = vars(contains("_pred")), .funs = function(x) as.numeric(x)) %>%
pivot_longer(cols = contains("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin(show.legend = F) +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name) +
bw.theme
rf.predictions2
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred1 = g.predictions1,
RF_pred1 = rf.predictions1,
glm_pred2 = g.predictions2,
# RF_pred2 = rf.predictions2
) %>%
mutate_at(.vars = vars(contains("_pred")), .funs = function(x) as.numeric(x)) %>%
pivot_longer(cols = contains("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin(show.legend = F) +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name) +
bw.theme
rpoe.all %>%
mutate(DL_pred = k.predictions$V1,
glm_pred1 = g.predictions1,
RF_pred1 = rf.predictions1,
glm_pred2 = g.predictions2,
# RF_pred2 = rf.predictions2
) %>%
mutate_at(.vars = vars(contains("_pred")), .funs = function(x) as.numeric(x)) %>%
pivot_longer(cols = contains("_pred")) %>%
ggplot(aes(x = ASD, y = value, fill = ASD)) +
geom_violin(show.legend = F) +
geom_boxplot(width= 0.2, fill = "white") +
ggpubr::stat_compare_means(color = "red") +
facet_wrap(~name, scales = "free") +
bw.theme
ggsave("figs/models-predictions-on-RPOE.png", bg = "white",
width = 6, height = 8, units = "in", dpi = 360)
